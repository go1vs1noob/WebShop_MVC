// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.DataAccess.Data;

#nullable disable

namespace Shop.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231102090415_AddDataToDb")]
    partial class AddDataToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Smartphones"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "TVs"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Monitors"
                        });
                });

            modelBuilder.Entity("Shop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Description1",
                            ImageUrl = "images/product/1.jpg",
                            Name = "Product1",
                            Price = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Description2",
                            ImageUrl = "images/product/2.jpg",
                            Name = "Product2",
                            Price = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Description3",
                            ImageUrl = "images/product/3.jpg",
                            Name = "Product3",
                            Price = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Description4",
                            ImageUrl = "images/product/4.jpg",
                            Name = "Product4",
                            Price = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Description5",
                            ImageUrl = "images/product/5.jpg",
                            Name = "Product5",
                            Price = 5
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Description6",
                            ImageUrl = "images/product/6.jpg",
                            Name = "Product6",
                            Price = 6
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 5,
                            Description = "Description7",
                            ImageUrl = "images/product/7.jpg",
                            Name = "Product7",
                            Price = 7
                        });
                });

            modelBuilder.Entity("Shop.Models.Product", b =>
                {
                    b.HasOne("Shop.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
